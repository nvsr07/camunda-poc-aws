<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.esrx.services</groupId>
	<artifactId>membership-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>membership-service</name>
	<description>Demo project for Spring Boot</description>

 <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <spring.boot.version>2.1.5.RELEASE</spring.boot.version>
        <spring-cloud-stream.version>Fishtown.RELEASE</spring-cloud-stream.version>
        <springfox.swagger.ui.version>2.6.1</springfox.swagger.ui.version>
        <springfox.swagger2.version>2.6.1</springfox.swagger2.version>

        <camunda.version>7.11.1-ee</camunda.version>
        <!--
        Adjust if you want to use Enterprise Edition of Camunda:
        <camunda.version>7.10.0-ee</camunda.version>
        Make sure you also switch to the ee webapp dependency below
        -->
        <camunda.spring.boot.version>3.3.2</camunda.spring.boot.version>
        <docker.repo>nvsr07</docker.repo>
        <docker.tag>latest</docker.tag>
        <docker.registry>registry.hub.docker.com</docker.registry>
        <docker.name>${docker.registry}/${docker.repo}/${artifactId}:${docker.tag}</docker.name>

    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-stream-dependencies</artifactId>
                <version>${spring-cloud-stream.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
            <version>${camunda.spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-webapp-ee</artifactId>
            <!--
                Adjust if you want to use Enterprise Edition of Camunda:
                <artifactId>camunda-bpm-spring-boot-starter-webapp-ee</artifactId>
                Make sure you also use an EE version of Camunda - see above
            -->
            <version>${camunda.spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>0.14</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
            <scope>provided</scope>
        </dependency>
        <!-- Persistence for order entity itself -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.swagger2.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.swagger.ui.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
	      <groupId>org.camunda.bpm.extension</groupId>
	      <artifactId>camunda-bpm-assert-scenario</artifactId>
	      <version>0.2</version>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.camunda.bpm.springboot</groupId>
	      <artifactId>camunda-bpm-spring-boot-starter-test</artifactId>
	      <version>${camunda.spring.boot.version}</version>
	    </dependency>

	    

    </dependencies>

    <repositories>
        <repository>
            <id>camunda-bpm-nexus</id>
            <name>Camunda BPM Maven Repository</name>
            <url>https://app.camunda.com/nexus/content/groups/public</url>
        </repository>
        <repository>
          <id>camunda-bpm-nexus-ee</id>
          <name>Camunda Enterprise Maven Repository</name>
          <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee</url>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.esrx.services.membership.MembershipServiceApplication</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
     <profiles>
        <profile>
            <id>jib</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>1.1.2</version>
                        <configuration>
                            <from>
                                <image>openjdk:8-jre-slim</image>
                            </from>
                            <to>
                                <image>${docker.name}</image>
                            </to>
                            <container>
                                <environment>
                                    <_JAVA_OPTIONS>'-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5069'</_JAVA_OPTIONS>
                                </environment>
                                <ports>
                                    <port>8069</port>
                                    <port>5069</port>
                                </ports>
                            </container>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
