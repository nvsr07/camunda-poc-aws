spring.application.name=orders
com.esrx.app.name=${spring.application.name}
server.port=8060
com.esrx.app.version=1
com.esrx.order.maxRetries=7
#spring.profiles=local


#Mongo
#spring.data.mongodb.host=10.228.0.3
#spring.data.mongodb.port=80
#spring.data.mongodb.database=OrderEntity
#spring.data.mongodb.repositories.enabled=true
#spring.data.mongodb.uri=mongodb://odr_adba_dv:Poofie4Quong@ch3dr606198.express-scripts.com:27017,ch3dr606199.express-scripts.com:27017/Order?replicaSet=rs-dv-odr01
#spring.data.mongodb.uri=mongodb://root:example@mongo:27017/orderapi

#spring.jackson.default-property-inclusion=non_null
spring.jackson.default-property-inclusion=always



#Actuator
management.security.enabled=false
springfox.documentation.swagger.v2.path=/api-docs
spring.mvc.view.prefix=/
spring.mvc.view.suffix=.html
# Management endpoint
management.context-path=/management
# Logging
logging.level.org.springframework.web:INFO
logging.level.com.esrx.services.order=DEBUG
logging.pattern.console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m : requestId=%X{requestId}%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}'


#Graphite
management.metrics.export.graphite.host=nonprodgraphite.express-scripts.com
management.metrics.export.graphite.port=2114
com.esrx.app.monitoring.environment=local
com.esrx.app.monitoring.organization=EEP_Order_To_Cash
com.esrx.app.monitoring.name=${spring.application.name}
com.esrx.app.monitoring.version=1
com.esrx.app.monitoring.region=local

# JWT Security
#com.esrx.app.security.jwt.trustedKeys=[{"alias":"API Gateway Dev 1","value":"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoEEyQRMWhZYsrC6WVyrHf4yq0nRNVfUL2R9IccP8Cj4zNMpvHd8c1MFVzM10dM0Zvw5uVRA5SrJK1bgFCQxo+DJSjsfXHia4Aoegd3enmmBVx5QJrL88p3FhyJ1gd/DQLKUV/E3tPIym4mxuqrUty4L5I0AdeybDVY+zSZ3+B1RZ/E4EOEZ9rUMTi0iTijyjpcqsbohFgND7fZRn9Dh5s9lQJB0X8ZeSBtM1uFp3W33ItfDOefyNzQ8ivR4Y7s7Tbcab4H67nBdFH2d/GN0xFYRylhK1dp0kH/vP93dZOb/q+jBgjarryfuAtnrigQ9lurmfH9KDnj8Aluju4yIxEwIDAQAB"}]
#com.esrx.app.security.jwt.tokenEncryptionKey=test


#kafka
#kafka.bootstrap-servers=ch3qr027055.express-scripts.com:9092,ch3qr027056.express-scripts.com:9092,ch3qr027057.express-scripts.com:9092
spring.kafka.bootstrap-servers=kafka:9092
kafka.bootstrap-servers=kafka:9092
#spring.kafka.bootstrap-servers=ch3qr027055.express-scripts.com:9092
kafka.consumer.auto-offset-reset=latest
kafka.application-id=order-streams-api-app-local-H
kafka.max.poll.records=5
kafka.stream.threads=10
kafka.retry.consumergroup=orderapiretry-H
kafka.retry.scheduler.time.interval=0/60 * * * * * 
kafka.retry.max.poll.records=50
kafka.retry.max.poll.interval=180000
kafka.retry.sessionout=180000
kafka.retry.consumer.auto-offset-reset=latest
sync.toggle.switch=false
kafka.producer.retrybackoffms = 20000
kafka.producer.retriescount = 20
kafka.partition.assignment.strategy=org.apache.kafka.clients.consumer.RoundRobinAssignor
kafka.producer.acksconfig = all
kafka.order.poll.timeout= 100


#topics
kafka.order.sync.topic=TP.ORDERS.SYNC.TMP
kafka.order.sync.retry.topic=TP.ORDERS.SYNC.RETRY.TMP
kafka.order.latest.topic=TP.ORDERS.LATEST.TMP
kafka.order.error.topic=TP.ORDERS.SYNC.ERROR.TMP
kafka.order.sync.change.topic=TP.ORDERS.CHANGE.TMP

tenantId.toggle.switch=false

com.esrx.order.api.truststore.password=EsiConKaf2018#
com.esrx.order.api.storeFile=./config/dev/kafka.ch3dr605413.truststore.jks
com.esrx.order.api.keytabFileName=./config/dev/orderkafkadev.keytab
com.esrx.order.api.kafkaPrincipal=orderkafkadev@NONPROD.DATAHUB.LOCAL
com.esrx.order.api.kafkaKrbConfFile=./config/dev/krb5.conf

com.esrx.order.api.accredoTenantId.value=512


authz.request.resourceName=/v1/orders
authz.url.extension=/authz/decisions
authz.host.url=http://localhost:3002/v1-local

com.esrx.app.security.oauth.consumer.requestTokenURL=http://localhost:3002/v1/auth/oauth/requestTokens
com.esrx.app.security.oauth.consumer.accessTokenURL=http://localhost:3002/v1/auth/oauth/accessTokens
com.esrx.app.security.oauth.consumer.consumerKey=
com.esrx.app.security.oauth.consumer.consumerSecret=

#Mongo
#orders.mongoUseClientCert=true
#orders.mongoKeystoreFile=classpath:config/dev/mongokeystore.jks
#orders.mongoKeystorePassword=Ordersdev12
#orders.mongouri=mongodb://odr_adba_dv:Poofie4Quong@ch3dr606198.express-scripts.com:27017,ch3dr606199.express-scripts.com:27017/Order?replicaSet=rs-dv-odr01
orders.mongouri=mongodb://root:example@mongo:27017/orderapi?authSource=admin
orders.mongodb.authentication-database=admin
max.no.resourceIds=100

#For Event API
com.esrx.app.event.api.url=https://api-dev.express-scripts.io/v2/events
com.esrx.app.event.api.enable=true

#For Event Retry
kafka.event.retry.consumergroup=orderkafkaapieventretry-H
kafka.order.event.retry.topic=TP.ORDERS.EVENT.RETRY.TMP
kafka.order.event.max.retry.count=10
kafka.event.retry.scheduler.time.interval=0/5 * * * * *

#Order Request
orderRequest.consumer.key.list=1e857b9b-9b2f-6777-b2ef-eeee0aff0aa1,1e976639-6c34-6447-a710-eeee0afa2517

#cacheutil settings
cache.clearEnabled=false
cache.scheduled.delay.string=10000

#caffeine settings
spring.cache.cache-names=authZCache
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=1800s

#Disable the NewRelic
com.esrx.app.monitoring.metrics.export.newrelic.enabled=false

# MVC
spring.mvc.servlet.path=/

# Actuator
management.endpoints.web.base-path=/management
management.health.ldap.enabled=false

# Basic Security
#com.esrx.app.security.ldap.ad.url=ldaps://ch3accountsprd.accounts.root.corp:636
#com.esrx.app.security.ldap.ad.domains=accounts.root.corp,esrx.com
#com.esrx.app.security.ldap.ad.root=OU=UsersGroups,DC=accounts,DC=root,DC=corp
#com.esrx.app.security.roleList=["role.ROLE_ACTUATOR"]
#role.ROLE_ACTUATOR={ "userList":["LAN_ID_GOES_HERE"]}
management.endpoints.web.exposure.include=health,info,beans,conditions,threaddump,heapdump,auditevents,caches,mappings,scheduledtasks


datasource.primary.jdbc_url=jdbc:h2:./camunda-db-order;DB_CLOSE_ON_EXIT=false

spring.cloud.stream.bindings.input.binder=kafka
spring.cloud.stream.bindings.output.binder=kafka
spring.cloud.stream.bindings.output.destination=flowing-retail
spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.bindings.input.destination=flowing-retail
spring.cloud.stream.bindings.input.content-type=application/json
spring.cloud.stream.bindings.input.group=order
#spring.cloud.stream.kafka.binder.zkNodes=kafka:2181
#spring.cloud.stream.kafka.binder.brokers=kafka:9092
spring.cloud.stream.binders.kafka.type=kafka
spring.cloud.stream.binders.kafka.environment.spring.brokers=kafka:9092
spring.cloud.stream.binders.kafka.environment.spring.zkNodes=kafka:2181


com.esrx.app.monitoring.environment=local
camunda.bpm.authorization.enabled=true
camunda.bpm.admin-user.id=demo
camunda.bpm.admin-user.password=demo
camunda.bpm.filter.create=All
#camunda.bpm.license-file=file:${user.home}/.camunda/license.txt
#camunda.bpm.license-file=file:${user.home}/properties/local/license.txt
camunda.bpm.webapp.index-redirect-enabled=false
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672

spring.security.user.name=demo
spring.security.user.password=demo
spring.security.user.role=admin
server.servlet.context-path=/camunda
#spring.main.allow-bean-definition-overriding=true
#server.error.whitelabel.enabled=false
